{"componentChunkName":"component---src-templates-docs-js","path":"/computer-technology/docker-and-containers","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/bodhi-root/public-wiki/tree/master/content"}},"mdx":{"fields":{"id":"c221126e-47d9-5148-9489-1abb384369c7","title":"Docker and Containers","slug":"/computer-technology/docker-and-containers"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker and Containers\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Containers\"), mdx(\"p\", null, \"Containers are similar to Virtual Machines except that all of the containers run on the same operating system.  Docker is the de facto standard in this space.  Applications built as docker images can easily be deployed in new environments as long as the new system can run the Docker engine.  Containers can also be used to deploy large clusters of computers, ensuring that they are all setup the same way.  Companies like Amazon are offering Container as a Service (CaaS), providing the infrastructure for you and then allowing you to run your containers on their hardware.\"), mdx(\"p\", null, \"The following is a good description of top technologies from the article: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.infoq.com/articles/container-landscape-2016\"\n  }), \"The Container Landscape\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Docker\"), \" is the container technology with most public traction and is \\u201Calmost\\u201D a de facto container standard right now. Docker is open source with several vendors behind it. Though, Docker Inc. is the one \\u201Cofficial\\u201D company controlling the project. They also recently \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://blog.docker.com/2016/06/docker-1-12-built-in-orchestration/\"\n  }), \"added the orchestration engine Docker Swarm to the main container project\"), \". Others like Red Hat and IBM contribute to the open source code. Various vendors offer support, consulting and cloud services (such as a public or private Docker Registry).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/coreos/rkt\"\n  }), \"Core OS\\u2019 rkt\"), \" (pronounced \\u201Crocket\\u201D) is another container technology emerging together with its container orchestration engine \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://coreos.com/using-coreos/clustering/\"\n  }), \"Fleet\"), \". It is a low-level framework built directly on systemd, often used as \\u201Cfoundation layer\\u201D for higher-level solutions. rkt focuses on security, composability (e.g. native Unix integration), and standards / compatibility \\u2013 as differentiator to Docker. rkt also can run Docker images natively and has native Kubernetes integration via \\u201Crktnetes\\u201D. CoreOS therefore also offers an \\u201CEnterprise Kubernetes Solution\\u201D called \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://tectonic.com/\"\n  }), \"Tectonic\"), \". This might be very important for future adoption in more projects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://blog.pivotal.io/pivotal-cloud-foundry/features/cloud-foundry-container-technology-a-garden-overview\"\n  }), \"Cloud Foundry\\u2019s Garden\"), \" Garden is used under the hood of the open source PaaS CloudFoundry. As many relevant software vendors like IBM, SAP or Pivotal base their PaaS strategy on CloudFoundry, Garden containers get used by many enterprises \\u201Cunder the hood\\u201D. In contrary to Docker and rkt, there is no real market outside of CloudFoundry for Garden containers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.infoq.com/articles/kubernetes.io\"\n  }), \"Kubernetes\"), \" is an orchestration engine for containers with a huge community behind it. This project was released as open source by Google earlier in the year; with many other contributors including software vendors like Red Hat, CoreOS or Mesosphere. Kubernetes is open to run different container technologies such as Docker (mostly used today) or CoreOS\\u2019 rkt (pronounced \\u201Crocket\\u201D). The two most well-known offerings of Kubernetes are: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.google.com/container-engine/\"\n  }), \"Google Container Engine\"), \" (public Kubernetes service) and Red Hat\\u2019s open source PaaS \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.openshift.com/\"\n  }), \"OpenShift\"), \" (based on Kubernetes, for hybrid cloud deployments). The latter adds some useful features on top of Kubernetes like an enhanced web user interface and an automated \\u2018source-to-deployment\\u2019 system that does not require knowledge about the underlying container and Docker subsystems.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://aws.amazon.com/ecs/\"\n  }), \"Amazon AWS ECS\"), \": This is a public CaaS to manage Docker images (that can be stored in the accompanying ECS Registry), run Docker containers (ECS Runtime) and schedule / orchestrate / monitor these container instances (AWS CloudWatch). These can also be combined with other AWS services like Elastic Load Balancer (AWS ELB), Virtual Private Connection (AWS VPC) or Identity and Access Management (AWS IAM). AWS Simplified Workflow is also tightly integrated with AWS ECS to use Docker CLI commands (e.g. push, pull, list, tag).\")), mdx(\"h2\", null, \"Orchestration Tools\"), mdx(\"p\", null, \"Closely related to this concept are the Orchestration Frameworks that manage the deployment of containers and allow you to manage a large cluster of computers and the containers deployed on them.  The following table provides a list of key container technologies and their related orchestration frameworks:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Tool\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Amazon EC2 Container Service (ECS)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The Amazon EC2 Container Service (ECS) supports Docker containers and lets you run applications on a managed cluster of \", mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://aws.amazon.com/ec2/\"\n  }), \"Amazon EC2 instances\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Azure Container Service (ACS)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://azure.microsoft.com/en-us/blog/azure-container-service-preview/\"\n  }), \"Azure Container Service\"), \" (ACS) -- ACS lets you create a cluster of virtual machines that act as container hosts along with master machines that are used to manage your application containers.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Cloud Foundry's Diego\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://docs.cloudfoundry.org/concepts/diego/diego-architecture.html\"\n  }), \"Cloud Foundry\\u2019s Diego\"), \" -- Diego is a container management system that combines a scheduler, runner, and health manager. It is a rewrite of the Cloud Foundry runtime.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"CoreOS Fleet\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://coreos.com/using-coreos/clustering/\"\n  }), \"CoreOS Fleet\"), \" -- Fleet is a container management tool that lets you deploy Docker containers on hosts in a cluster as well as distribute services across a cluster.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Docker Swarm\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://www.docker.com/products/docker-swarm\"\n  }), \"Docker Swarm\"), \" -- Docker Swarm provides native clustering functionality for Docker containers, which lets you turn a group of Docker engines into a single, virtual Docker engine.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Google Container Engine\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://cloud.google.com/container-engine/\"\n  }), \"Google Container Engine\"), \" -- Google Container Engine, which is built on Kubernetes, lets you run Docker containers on the Google Cloud platform. It schedules containers into the cluster and manages them based on user-defined requirements.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Kubernetes\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"http://kubernetes.io/\"\n  }), \"Kubernetes\"), \" -- Kubernetes is an orchestration system for Docker containers. It handles scheduling and manages workloads based on user-defined parameters.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Mesosphere Marathon\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://mesosphere.github.io/marathon/\"\n  }), \"Mesosphere Marathon\"), \" -- Marathon is a container orchestration framework for \", mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"https://mesos.apache.org/\"\n  }), \"Apache Mesos\"), \" that is designed to launch long-running applications. It offers key features for running applications in a clustered environment.\")))), mdx(\"p\", null, \"NOTE: This table was taken from the article \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.linux.com/news/8-open-source-CONTAINER-ORCHESTRATION-TOOLS-KNOW\"\n  }), \"8 Container Orchestration Tools to Know\"), \".  The article also mentioned that Kubernetes has been selected by the Cloud Native Computing Federation (CNCF) as their first standard technology.\"), mdx(\"h2\", null, \"When to Use Docker\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.linode.com/docs/applications/containers/when-and-why-to-use-docker/\"\n  }), \"This article\"), \" provides a good overview of when to use (and when not to use) Docker for your projects.  This helped clarify my thinking on it and get you past the \\\"everything should be dockerized!\\\" but \\\"doesn't this seem too hard/complicated?\\\" roadblock.  Basically, if you expect to spend a lot of time setting up an environment and you expect to do this repeatedly, Docker may be a good solution.  I'm not sure a simple Java web app meets this use case.  If you're building self-contained \\\".jar\\\" files that contain the web server and all dependencies, you're only other dependency will be having Java installed.  Provisioning a Linux server, installing Java, copying over your web app, and starting it up seems simple enough.  It's definitely simpler than provisioning a Linux server, installing Docker, building a docker image for your web app, copying over the image, and running the image.  If you're application needs a database, this also doesn't seem like a great use case for Docker.  Databases tend to be shared resources that you install and configure separately from your app.  Once again it is probably easier to stand up a Linux server, install your database, and configure it, rather than trying to build the database in a docker image and do all the configuration in there.  (It also doesn't seem beneficial to try to bundle your app with a database using Kubernetes for similar reasons.)  Unless you are standing up databases all the time and find yourself doing the same installation/configuration over and over again, Docker probably makes things more difficult rather than easier.\"), mdx(\"p\", null, \"So when would you use Docker?  Any time you find yourself doing the same server setup and configuration over and over again.  Running R jobs on remote servers is one use case our team keeps bumping into.  R is a bit difficult to install - especially when you want to get several libraries and make sure you have the right versions of them.  A Docker image for something like this - especially when we talk about running jobs remotely on a cluster - seems to make a lot of sense.  Python web apps might also be a good use case.  Python doesn't produce self-contained executables like Java for web apps.  You end up installing a lot of dependencies and managing virtual environments to keep them all separate.  If you had a consistent set of dependencies that you could put into a base docker image that might make life easier.  And once you get to the point where most of your apps are being deployed through docker, it would probably make sense to start doing this for all of your apps.  There should be a simple way to build a Linux image with Java installed to bundle your Java apps pretty painlessly.  But unless this becomes your normal mode of working, it probably is more trouble and complexity than it's worth.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#containers","title":"Containers"},{"url":"#orchestration-tools","title":"Orchestration Tools"},{"url":"#when-to-use-docker","title":"When to Use Docker"}]},"parent":{"relativePath":"computer-technology/docker-and-containers.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/class-notes","title":"Class Notes"}}},{"node":{"fields":{"slug":"/computer-technology","title":"Computer Technology"}}},{"node":{"fields":{"slug":"/google-cloud-platform","title":"Google Cloud Platform"}}},{"node":{"fields":{"slug":"/","title":"Dan's Notes"}}},{"node":{"fields":{"slug":"/lean-process-management","title":"Lean Process Management"}}},{"node":{"fields":{"slug":"/personal","title":"About Me"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management","title":"MIT Supply Chain Management"}}},{"node":{"fields":{"slug":"/class-notes/university-of-cincinnati","title":"University of Cincinnati"}}},{"node":{"fields":{"slug":"/computer-technology/builder-pattern-java","title":"The Builder Pattern in Java"}}},{"node":{"fields":{"slug":"/computer-technology/databases","title":"Databases"}}},{"node":{"fields":{"slug":"/computer-technology/docker-and-containers","title":"Docker and Containers"}}},{"node":{"fields":{"slug":"/computer-technology/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/computer-technology/git","title":"Git"}}},{"node":{"fields":{"slug":"/computer-technology/gpl-beer-clause-license","title":"GPL License with Modified \"Beer Clause\""}}},{"node":{"fields":{"slug":"/computer-technology/html-css","title":"HTML and CSS"}}},{"node":{"fields":{"slug":"/computer-technology/proxy-firewall","title":"Proxy Firewalls"}}},{"node":{"fields":{"slug":"/computer-technology/r-and-docker","title":"R and Docker"}}},{"node":{"fields":{"slug":"/computer-technology/react","title":"React Notes"}}},{"node":{"fields":{"slug":"/computer-technology/regular-expressions","title":"Regular Expression Cheat Sheet"}}},{"node":{"fields":{"slug":"/computer-technology/tao-of-programming","title":"The Tao of Programming"}}},{"node":{"fields":{"slug":"/google-cloud-platform/cloud-sql","title":"Cloud SQL"}}},{"node":{"fields":{"slug":"/google-cloud-platform/cloud-storage-in-gcp","title":"Cloud Storage in GCP"}}},{"node":{"fields":{"slug":"/google-cloud-platform/coursera-courses-for-gcp","title":"Coursera Courses for GCP"}}},{"node":{"fields":{"slug":"/google-cloud-platform/gcp-regions","title":"GCP Regions"}}},{"node":{"fields":{"slug":"/google-cloud-platform/google-cloud-sdk","title":"Google Cloud SDK (gcloud and gsutil)"}}},{"node":{"fields":{"slug":"/google-cloud-platform/google-container-registry","title":"GCR (Google Container Registry)"}}},{"node":{"fields":{"slug":"/google-cloud-platform/pubsub-streaming-to-bigquery","title":"PubSub Streaming to BigQuery"}}},{"node":{"fields":{"slug":"/google-cloud-platform/virtual-private-cloud","title":"Virtual Private Cloud (VPC)"}}},{"node":{"fields":{"slug":"/lean-process-management/a3-problem-solving","title":"A3 Problem Solving"}}},{"node":{"fields":{"slug":"/lean-process-management/cause-and-effect-matrix","title":"Cause and Effect Matrix"}}},{"node":{"fields":{"slug":"/lean-process-management/fishbone-diagram","title":"Fishbone Diagram"}}},{"node":{"fields":{"slug":"/lean-process-management/five-whys","title":"5 Why's & Issue Trees"}}},{"node":{"fields":{"slug":"/lean-process-management/mece-diagram","title":"MECE Diagram"}}},{"node":{"fields":{"slug":"/lean-process-management/six-step-problem-solving","title":"Six Step Problem Solving"}}},{"node":{"fields":{"slug":"/lean-process-management/tbp-coaching-tool","title":"TBP Coaching Tool"}}},{"node":{"fields":{"slug":"/lean-process-management/weighted-shortest-job-first","title":"Weighted Shortest Job First"}}},{"node":{"fields":{"slug":"/lean-process-management/work-stories-and-eracs","title":"Work Stories and ERCS (Mr. Potato Head)"}}},{"node":{"fields":{"slug":"/personal/quotes","title":"Quotes"}}},{"node":{"fields":{"slug":"/personal/reading-list","title":"Reading List"}}},{"node":{"fields":{"slug":"/personal/work_rules","title":"Work Rules! (Notes)"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management/sc1-supply-chain-fundamentals","title":"CTL.SC1 Supply Chain Fundamentals"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management/sc4-supply-chain-tech-and-systems","title":"CTL.SC4 Supply Chain Technology & Systems"}}},{"node":{"fields":{"slug":"/class-notes/university-of-cincinnati/22QA725-time-series-analysis","title":"22 QA 725 - Time Series Analysis"}}},{"node":{"fields":{"slug":"/google-cloud-platform/bigquery","title":"BigQuery"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management/sc4-supply-chain-tech-and-systems/the-fresh-connection","title":"The Fresh Connection"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"c221126e-47d9-5148-9489-1abb384369c7"}}}