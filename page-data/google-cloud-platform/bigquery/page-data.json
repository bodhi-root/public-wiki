{"componentChunkName":"component---src-templates-docs-js","path":"/google-cloud-platform/bigquery","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/bodhi-root/public-wiki/tree/master/content"}},"mdx":{"fields":{"id":"e0898371-e834-59ca-8d8a-ca9ff22f2fa2","title":"BigQuery","slug":"/google-cloud-platform/bigquery"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BigQuery\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Connecting to BigQuery from R (on-prem)\"), mdx(\"p\", null, \"To connect to BigQuery from R you will want to use the \\\"bigrquery\\\" package:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"library(bigrquery)\\n\")), mdx(\"p\", null, \"You might need to install this from GitHub to get the latest features though:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"install.packages('devtools')\\ndevtools::install_github(\\\"rstats-db/bigrquery\\\")\\n\")), mdx(\"p\", null, \"Then you should be able to run queries with:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"project <- \\\"my-gcp-project\\\"\\nsql <- \\\"SELECT COUNT(*) FROM my_dataset.my_table\\\"\\n\\ndf <- query_exec(sql, project = project, useLegacySql = FALSE)\\n\")), mdx(\"p\", null, \"This will bring up a browser window to ask you to authenticate.  To get this working through the corporate proxy you will want to run the following before doing your query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"library(\\\"httr\\\") # needed to set global httr config\\n\\n\\n# Set global proxy settings for httr/curl\\nset_config(use_proxy(\\\"http://proxy.domain.com\\\", port = port_number, username = .EUID, password = .PASSWORD, auth = \\\"basic\\\"), override = TRUE)\\n\")), mdx(\"p\", null, \"(source: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ropensci/osmdata/issues/111\"\n  }), \"https://github.com/ropensci/osmdata/issues/111\"), \" )\"), mdx(\"p\", null, \"Connecting to R from Python\\nThe following code was used to query BigQuery for the 75th project to test connectivity.  It just produces a simple row count.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"from google.cloud import bigquery\\n\\nbq_client = bigquery.Client()\\n\\nresults = bq_client.query(\\\"SELECT COUNT(*) FROM my_dataset.my_table\\\").result()\\n\\nfor row in results:\\n    print(row)\\n    #print(\\\"{}: {} views\\\".format(row.url, row.view_count))\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#connecting-to-bigquery-from-r-on-prem","title":"Connecting to BigQuery from R (on-prem)"}]},"parent":{"relativePath":"google-cloud-platform/bigquery.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/class-notes","title":"Class Notes"}}},{"node":{"fields":{"slug":"/computer-technology","title":"Computer Technology"}}},{"node":{"fields":{"slug":"/google-cloud-platform","title":"Google Cloud Platform"}}},{"node":{"fields":{"slug":"/","title":"Dan's Notes"}}},{"node":{"fields":{"slug":"/lean-process-management","title":"Lean Process Management"}}},{"node":{"fields":{"slug":"/personal","title":"About Me"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management","title":"MIT Supply Chain Management"}}},{"node":{"fields":{"slug":"/class-notes/university-of-cincinnati","title":"University of Cincinnati"}}},{"node":{"fields":{"slug":"/computer-technology/builder-pattern-java","title":"The Builder Pattern in Java"}}},{"node":{"fields":{"slug":"/computer-technology/databases","title":"Databases"}}},{"node":{"fields":{"slug":"/computer-technology/docker-and-containers","title":"Docker and Containers"}}},{"node":{"fields":{"slug":"/computer-technology/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/computer-technology/git","title":"Git"}}},{"node":{"fields":{"slug":"/computer-technology/gpl-beer-clause-license","title":"GPL License with Modified \"Beer Clause\""}}},{"node":{"fields":{"slug":"/computer-technology/html-css","title":"HTML and CSS"}}},{"node":{"fields":{"slug":"/computer-technology/proxy-firewall","title":"Proxy Firewalls"}}},{"node":{"fields":{"slug":"/computer-technology/r-and-docker","title":"R and Docker"}}},{"node":{"fields":{"slug":"/computer-technology/react","title":"React Notes"}}},{"node":{"fields":{"slug":"/computer-technology/regular-expressions","title":"Regular Expression Cheat Sheet"}}},{"node":{"fields":{"slug":"/computer-technology/tao-of-programming","title":"The Tao of Programming"}}},{"node":{"fields":{"slug":"/google-cloud-platform/cloud-sql","title":"Cloud SQL"}}},{"node":{"fields":{"slug":"/google-cloud-platform/cloud-storage-in-gcp","title":"Cloud Storage in GCP"}}},{"node":{"fields":{"slug":"/google-cloud-platform/coursera-courses-for-gcp","title":"Coursera Courses for GCP"}}},{"node":{"fields":{"slug":"/google-cloud-platform/gcp-regions","title":"GCP Regions"}}},{"node":{"fields":{"slug":"/google-cloud-platform/google-cloud-sdk","title":"Google Cloud SDK (gcloud and gsutil)"}}},{"node":{"fields":{"slug":"/google-cloud-platform/google-container-registry","title":"GCR (Google Container Registry)"}}},{"node":{"fields":{"slug":"/google-cloud-platform/pubsub-streaming-to-bigquery","title":"PubSub Streaming to BigQuery"}}},{"node":{"fields":{"slug":"/google-cloud-platform/virtual-private-cloud","title":"Virtual Private Cloud (VPC)"}}},{"node":{"fields":{"slug":"/lean-process-management/a3-problem-solving","title":"A3 Problem Solving"}}},{"node":{"fields":{"slug":"/lean-process-management/cause-and-effect-matrix","title":"Cause and Effect Matrix"}}},{"node":{"fields":{"slug":"/lean-process-management/fishbone-diagram","title":"Fishbone Diagram"}}},{"node":{"fields":{"slug":"/lean-process-management/five-whys","title":"5 Why's & Issue Trees"}}},{"node":{"fields":{"slug":"/lean-process-management/mece-diagram","title":"MECE Diagram"}}},{"node":{"fields":{"slug":"/lean-process-management/six-step-problem-solving","title":"Six Step Problem Solving"}}},{"node":{"fields":{"slug":"/lean-process-management/tbp-coaching-tool","title":"TBP Coaching Tool"}}},{"node":{"fields":{"slug":"/lean-process-management/weighted-shortest-job-first","title":"Weighted Shortest Job First"}}},{"node":{"fields":{"slug":"/lean-process-management/work-stories-and-eracs","title":"Work Stories and ERCS (Mr. Potato Head)"}}},{"node":{"fields":{"slug":"/personal/quotes","title":"Quotes"}}},{"node":{"fields":{"slug":"/personal/reading-list","title":"Reading List"}}},{"node":{"fields":{"slug":"/personal/work_rules","title":"Work Rules! (Notes)"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management/sc1-supply-chain-fundamentals","title":"CTL.SC1 Supply Chain Fundamentals"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management/sc4-supply-chain-tech-and-systems","title":"CTL.SC4 Supply Chain Technology & Systems"}}},{"node":{"fields":{"slug":"/class-notes/university-of-cincinnati/22QA725-time-series-analysis","title":"22 QA 725 - Time Series Analysis"}}},{"node":{"fields":{"slug":"/google-cloud-platform/bigquery","title":"BigQuery"}}},{"node":{"fields":{"slug":"/class-notes/mit-supply-chain-management/sc4-supply-chain-tech-and-systems/the-fresh-connection","title":"The Fresh Connection"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"e0898371-e834-59ca-8d8a-ca9ff22f2fa2"}}}